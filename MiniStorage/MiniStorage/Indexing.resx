<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>